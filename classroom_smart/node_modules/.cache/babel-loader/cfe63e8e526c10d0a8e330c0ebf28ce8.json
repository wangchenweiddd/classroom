{"remainingRequest":"D:\\WebstormProjects\\classroom_smart\\node_modules\\babel-loader\\lib\\index.js!D:\\WebstormProjects\\classroom_smart\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WebstormProjects\\classroom_smart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WebstormProjects\\classroom_smart\\src\\components\\User\\pduPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WebstormProjects\\classroom_smart\\src\\components\\User\\pduPage.vue","mtime":1604632004861},{"path":"D:\\WebstormProjects\\classroom_smart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WebstormProjects\\classroom_smart\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WebstormProjects\\classroom_smart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WebstormProjects\\classroom_smart\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\WebstormProjects\\\\classroom_smart\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport moment from 'moment';\nexport default {\n  name: \"HomePage\",\n  mounted: function mounted() {\n    this.getTree();\n    this.getPduList();\n    this.getpduStatus();\n  },\n  data: function data() {\n    return {\n      current: '',\n      voltage: '',\n      judge: false,\n      pduname: '',\n      ip: '',\n      getId: '',\n      latetime: '',\n      formItem: {\n        num: '',\n        port: ''\n      },\n      currentId: '',\n      total: 100,\n      online: 50,\n      offline: 50,\n      modal1: false,\n      modal2: false,\n      currentRegionCode: '01',\n      treeDataShow: [],\n      loading: false,\n      currentTreeType: 'campus',\n      currentType: 'school',\n      currentTreeId: '5',\n      pduStatus: '总数',\n      pduInfoList: [],\n      pduAllList: []\n    };\n  },\n  methods: {\n    ok1: function ok1() {\n      var _this = this;\n\n      var json = {\n        equId: this.currentId,\n        port: this.formItem.port,\n        mark: '1'\n      };\n      this.$api.getPduSwitch(json).then(function (res) {\n        console.log(res);\n\n        _this.$Message.info(res.data.msg);\n      });\n      this.modal1 = false;\n    },\n    ok2: function ok2() {\n      this.modal2 = false;\n    },\n    selectThisSet: function selectThisSet(item) {\n      console.log('item', item);\n      this.currentId = item.equId;\n      this.modal1 = true;\n    },\n    showTotal: function showTotal() {\n      var _this2 = this;\n\n      this.pduInfoList = [];\n      var json = {\n        type: this.currentTreeType,\n        id: this.currentTreeId,\n        select: '总数'\n      };\n      this.$api.getPduList(json).then(function (res) {\n        res.data.data.forEach(function (item) {\n          // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n          if (item.pduUpdateInfoCur) {\n            item.pduBaseInfo.i = item.pduUpdateInfoCur.i;\n            item.pduBaseInfo.u = item.pduUpdateInfoCur.u;\n            item.pduBaseInfo.p = item.pduUpdateInfoCur.p;\n            item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId;\n          }\n\n          _this2.pduInfoList.push(item.pduBaseInfo);\n        });\n      });\n    },\n    showOnline: function showOnline() {\n      var _this3 = this;\n\n      this.pduInfoList = [];\n      var json = {\n        type: this.currentTreeType,\n        id: this.currentTreeId,\n        select: '在线数'\n      };\n      this.$api.getPduList(json).then(function (res) {\n        res.data.data.forEach(function (item) {\n          // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n          if (item.pduUpdateInfoCur) {\n            item.pduBaseInfo.i = item.pduUpdateInfoCur.i;\n            item.pduBaseInfo.u = item.pduUpdateInfoCur.u;\n            item.pduBaseInfo.p = item.pduUpdateInfoCur.p;\n            item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId;\n          }\n\n          _this3.pduInfoList.push(item.pduBaseInfo);\n        });\n      });\n    },\n    showOffline: function showOffline() {\n      var _this4 = this;\n\n      this.pduInfoList = [];\n      var json = {\n        type: this.currentTreeType,\n        id: this.currentTreeId,\n        select: '离线数'\n      };\n      this.$api.getPduList(json).then(function (res) {\n        res.data.data.forEach(function (item) {\n          // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n          if (item.pduUpdateInfoCur) {\n            item.pduBaseInfo.i = item.pduUpdateInfoCur.i;\n            item.pduBaseInfo.u = item.pduUpdateInfoCur.u;\n            item.pduBaseInfo.p = item.pduUpdateInfoCur.p;\n            item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId;\n          }\n\n          _this4.pduInfoList.push(item.pduBaseInfo);\n        });\n      });\n    },\n    getpduStatus: function getpduStatus() {\n      var _this5 = this;\n\n      var json = {\n        type: this.currentType,\n        id: this.currentTreeId\n      };\n      this.$api.getPduStatus(json).then(function (res) {\n        console.log('status', res);\n        _this5.total = res.data.data.all;\n        _this5.offline = res.data.data.offline;\n        _this5.online = res.data.data.online;\n      });\n    },\n    transformTime: function transformTime(data) {\n      return moment(data).format('YYYY-MM-DD HH:MM:SS');\n    },\n    showdianliu: function showdianliu() {\n      var myChart = this.$echarts.init(document.getElementById(\"dianliu\"));\n      myChart.setOption({\n        title: {\n          text: \"72h电流展示图(A)\",\n          x: 'center',\n          y: 'top'\n        },\n        //图例-每一条数据的名字\n        // legend:{\n        //   data:['安培']\n        // },\n        tooltip: {\n          show: true,\n          trigger: 'axis'\n        },\n        //x轴\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [\"9h\", \"18h\", \"27h\", \"36h\", \"45h\", \"54h\", \"63h\", \"72h\"]\n        },\n        //y轴没有显式设置，根据值自动生成y轴\n        yAxis: {\n          type: 'value'\n        },\n        //数据-data是最终要显示的数据\n        series: [{\n          name: '电流',\n          type: 'line',\n          data: this.current // data:[5,6,7,8,5,6,9,8]\n\n        }]\n      });\n    },\n    showdianya: function showdianya() {\n      var myChart = this.$echarts.init(document.getElementById(\"dianya\"));\n      myChart.setOption({\n        title: {\n          text: \"72h电压展示图(V)\",\n          x: 'center',\n          y: 'top'\n        },\n        //图例-每一条数据的名字\n        // legend:{\n        //   data:['安培']\n        // },\n        tooltip: {\n          show: true,\n          trigger: 'axis'\n        },\n        //x轴\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [\"9h\", \"18h\", \"27h\", \"36h\", \"45h\", \"54h\", \"63h\", \"72h\"]\n        },\n        //y轴没有显式设置，根据值自动生成y轴\n        yAxis: {\n          type: 'value'\n        },\n        //数据-data是最终要显示的数据\n        series: [{\n          name: '电压',\n          type: 'line',\n          data: this.voltage // data:[5.565,6,7,8,5,6,9,8]\n\n        }]\n      });\n    },\n    // async await\n    getdata: function () {\n      var _getdata = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this6 = this;\n\n        var json;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                json = {\n                  equId: this.getId\n                };\n                _context.next = 3;\n                return this.$api.getdianliu(json).then(function (res) {\n                  // console.log('dianliu',res)\n                  _this6.current = res.data.data.yvalue; // console.log('current',this.current)\n                });\n\n              case 3:\n                _context.next = 5;\n                return this.$api.getdianya(json).then(function (res) {\n                  // console.log('dainya',res)\n                  _this6.voltage = res.data.data.yvalue; // console.log('voltage', this.voltage)\n                });\n\n              case 5:\n                this.judge = true;\n                this.showdianliu();\n                this.showdianya();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getdata() {\n        return _getdata.apply(this, arguments);\n      }\n\n      return getdata;\n    }(),\n    // getdianliu() {\n    //   let json = {\n    //     equId: this.getId\n    //   }\n    //   this.$api.getdianliu(json).then(res => {\n    //     console.log('dianliu',res)\n    //     this.current = res.data.data.yvalue\n    //     console.log('current',this.current)\n    //   })\n    // },\n    // getdianya() {\n    //   let json = {\n    //     equId: this.getId\n    //   }\n    //   this.$api.getdianya(json).then(res => {\n    //     console.log('dainya',res)\n    //     this.voltage = res.data.data.yvalue\n    //     console.log('voltage', this.voltage)\n    //   })\n    // },\n    openDetail: function openDetail(data) {\n      console.log('data', data);\n      this.modal2 = true;\n      this.getId = data.equId;\n      this.pduname = data.name;\n      this.ip = data.ip;\n      this.latetime = data.lastUpdateTime; // this.getdianliu()\n      // this.getdianya()\n\n      this.getdata(); // this.showdianliu()\n      // this.showdianya()\n      // 获取详情接口，可从data中获取数据，接口暂时不用\n      // let json = {\n      //   equId: data.equId\n      // }\n      // this.$api.getPduDetail(json).then(res => {\n      //   console.log('detail',res)\n      // })\n    },\n    getTree: function getTree() {\n      // let json = {\n      //   type: this.currentTreeType,\n      //   // id: ''\n      //   id: this.currentTreeId\n      // }\n      // this.$api.getPduTree(json).then(res => {\n      //   res.data.forEach(item => {\n      //     item.title = item.name\n      //   })\n      //   this.treeDataShow = res.data\n      // })\n      this.treeDataShow = [{\n        id: 5,\n        isParent: true,\n        name: '磬苑校区',\n        nodekey: 0,\n        pid: \"school_0\",\n        title: \"磬苑校区\",\n        type: \"campus\",\n        expand: true,\n        children: [{\n          id: 3,\n          isParent: true,\n          name: '博学南楼',\n          nodekey: 0,\n          pid: \"campus_5\",\n          title: \"博学南楼\",\n          type: \"group\"\n        }, {\n          id: 4,\n          isParent: true,\n          name: '博学北楼',\n          nodekey: 1,\n          pid: \"campus_5\",\n          title: \"博学北楼\",\n          type: \"group\"\n        }, {\n          id: 5,\n          isParent: true,\n          name: '笃行南楼',\n          nodekey: 2,\n          pid: \"campus_5\",\n          title: \"笃行南楼\",\n          type: \"group\"\n        }, {\n          id: 6,\n          isParent: true,\n          name: '笃行北楼',\n          nodekey: 3,\n          pid: \"campus_5\",\n          title: \"笃行北楼\",\n          type: \"group\"\n        }]\n      }];\n    },\n    selectNode: function selectNode(data, item) {\n      var _this7 = this;\n\n      this.pduAllList = [];\n      this.currentTreeType = item.type;\n      this.currentType = item.type;\n      this.currentTreeId = item.id; // if (this.currentTreeType === 'build') {\n      //   return\n      // }\n      // let json = {\n      //   type: this.currentTreeType,\n      //   id: this.currentTreeId\n      // }\n      // this.$api.getPduTree(json).then(res => {\n      //   res.data.forEach(item => {\n      //     if (!item.title) {\n      //       item.title = item.name\n      //     }\n      //   })\n      //   this.$set(item, 'children', res.data)\n      // })\n      // console.log('type', this.currentTreeType)\n      // console.log('id', this.currentTreeId)\n\n      this.getpduStatus();\n      var json = {\n        type: this.currentTreeType,\n        id: this.currentTreeId,\n        select: this.pduStatus\n      };\n      this.$api.getPduList(json).then(function (res) {\n        res.data.data.forEach(function (item) {\n          // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n          if (item.pduUpdateInfoCur) {\n            item.pduBaseInfo.i = item.pduUpdateInfoCur.i;\n            item.pduBaseInfo.u = item.pduUpdateInfoCur.u;\n            item.pduBaseInfo.p = item.pduUpdateInfoCur.p;\n            item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId;\n          }\n\n          _this7.pduAllList.push(item.pduBaseInfo);\n        });\n        console.log('this.pduAllList', _this7.pduAllList);\n      });\n      this.pduInfoList = this.pduAllList;\n    },\n    nodeContext: function nodeContext(data) {\n      console.log(data);\n    },\n    getPduList: function getPduList() {\n      var _this8 = this;\n\n      this.loading = true;\n      var json = {\n        type: this.currentTreeType,\n        id: this.currentTreeId,\n        select: this.pduStatus\n      };\n      this.$api.getPduList(json).then(function (res) {\n        console.log('rrreeeessssss', res);\n        _this8.loading = false;\n        res.data.data.forEach(function (item) {\n          // this.pduInfoList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n          if (item.pduUpdateInfoCur) {\n            item.pduBaseInfo.i = item.pduUpdateInfoCur.i;\n            item.pduBaseInfo.u = item.pduUpdateInfoCur.u;\n            item.pduBaseInfo.p = item.pduUpdateInfoCur.p;\n            item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId;\n          }\n\n          _this8.pduInfoList.push(item.pduBaseInfo);\n        });\n        console.log('this.pduInfoList', _this8.pduInfoList);\n      });\n    }\n  }\n};",{"version":3,"sources":["pduPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Row>\n      <Col span=\"4\">\n        <div class=\"tree-container\">\n          <Tree @on-select-change=\"selectNode\" @node-contextmenu=\"nodeContext\" :data=\"treeDataShow\"\n                v-loading=\"!treeDataShow.length\"></Tree>\n        </div>\n      </Col>\n      <Col span=\"20\">\n        <div class=\"content\" v-loading=\"loading\">\n          <div style=\"width: 100%; display: flex;flex-direction: row;justify-content: center;align-items: center\">\n            <el-button type=\"primary\" @click=\"showTotal\" style=\"width: 90px\" ghost>总数 {{total}}</el-button>\n            <el-button type=\"primary\" @click=\"showOnline\" style=\"width: 90px\" ghost>在线 {{online}}</el-button>\n            <el-button type=\"primary\" @click=\"showOffline\" style=\"width: 90px\" ghost>离线 {{offline}}</el-button>\n          </div>\n          <div class=\"content-item\" @click.stop=\"selectThisSet(item)\" v-for=\"(item, index) in pduInfoList\">\n            <Card v-loading=\"!pduInfoList.length\">\n              <div class=\"title-con\" slot=\"title\">\n                <div style=\"display: flex;flex-direction: row;justify-content: flex-start;line-height: 22px\">\n                  <Icon type=\"ios-home\" size=\"22\"/>\n                  <span>{{item.name}}<i v-if=\"item.selected\" class=\"el-icon-circle-check time-selected\"></i></span>\n                </div>\n                <span style=\"color: #409EFF\" @click.stop=\"openDetail(item)\">详情</span>\n              </div>\n              <div class=\"card-container\">\n                <div class=\"card-left\">\n                  <span>功率{{item.p}}W</span>\n                </div>\n                <div class=\"card-mid\">\n                  <span>电压{{item.u}}V</span>\n                </div>\n                <div class=\"card-right\">\n                  <span>电流{{item.i}}A</span>\n                </div>\n              </div>\n              <div class=\"card-bottom\"><span>{{item.ip}}</span><span>{{transformTime(item.lastUpdateTime)}}</span></div>\n            </Card>\n          </div>\n          <div v-if=\"!pduInfoList.length && !loading\">暂无数据</div>\n          <Modal\n            v-model=\"modal1\"\n            title=\"pdu控制\"\n            :mask-closable=\"false\"\n          >\n            <Form :model=\"formItem\" label-position=\"left\" :label-width=\"100\">\n              <FormItem label=\"选择端口:\">\n                <RadioGroup v-model=\"formItem.num\">\n                  <Radio label=\"1\" border></Radio>\n                  <Radio label=\"2\" border></Radio>\n                  <Radio label=\"3\" border></Radio>\n                  <Radio label=\"4\" border></Radio>\n                  <Radio label=\"5\" border></Radio>\n                  <Radio label=\"6\" border></Radio>\n                  <Radio label=\"7\" border></Radio>\n                  <Radio label=\"8\" border></Radio>\n                </RadioGroup>\n              </FormItem>\n              <FormItem label=\"操作:\">\n                <RadioGroup v-model=\"formItem.port\">\n                  <Radio label=\"1\">重启</Radio>\n                  <Radio label=\"2\">延时开</Radio>\n                  <Radio label=\"3\">延时关</Radio>\n                  <Radio label=\"4\">延时重启</Radio>\n                  <Radio label=\"5\">打开</Radio>\n                  <Radio label=\"6\">关闭</Radio>\n                </RadioGroup>\n              </FormItem>\n            </Form>\n            <div slot=\"footer\">\n              <Button type=\"primary\" @click=\"ok1\">确定</Button>\n            </div>\n          </Modal>\n          <Modal\n            v-model=\"modal2\"\n            title=\"PDU详情\"\n            :mask-closable=\"false\"\n            width=\"1200px\"\n          >\n            <div style=\"display: flex;flex-direction: row;flex-wrap: wrap;justify-content: space-between\">\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">PDU名称</p>\n                <p>{{pduname}}</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">IP地址</p>\n                <p>{{ip}}</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">最后通信时间</p>\n                <p>{{transformTime(latetime)}}</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">最小功率限制</p>\n                <p>0W</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">最大功率限制</p>\n                <p>3000W</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px\">\n                <p slot=\"title\">功率报警线</p>\n                <p>2200W</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">最小电流限制</p>\n                <p>0A</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">最大电流限制</p>\n                <p>12A</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">电流报警线</p>\n                <p>10A</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">最小电压限制</p>\n                <p>200V</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">最大电压限制</p>\n                <p>245V</p>\n              </Card>\n              <Card dis-hover style=\"width: 180px;margin-top: 5px\">\n                <p slot=\"title\">电压报警线</p>\n                <p>230V</p>\n              </Card>\n            </div>\n            <div style=\"margin-top: 50px;display: flex;flex-direction: row;justify-content: space-between\" v-show=\"judge\">\n              <div id=\"dianliu\" style=\"width: 500px;height:400px;\"></div>\n              <div id=\"dianya\" style=\"width: 500px;height:400px;\"></div>\n            </div>\n            <div slot=\"footer\">\n              <Button type=\"primary\" @click=\"ok2\">确定</Button>\n            </div>\n          </Modal>\n        </div>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n  import echarts from 'echarts'\n  import moment from 'moment'\n  export default {\n    name: \"HomePage\",\n    mounted() {\n      this.getTree()\n      this.getPduList()\n      this.getpduStatus()\n    },\n    data() {\n      return {\n        current: '',\n        voltage: '',\n        judge: false,\n        pduname: '',\n        ip: '',\n        getId: '',\n        latetime: '',\n        formItem: {\n          num: '',\n          port: ''\n        },\n        currentId: '',\n        total: 100,\n        online: 50,\n        offline: 50,\n        modal1: false,\n        modal2: false,\n        currentRegionCode: '01',\n        treeDataShow: [],\n        loading: false,\n        currentTreeType: 'campus',\n        currentType: 'school',\n        currentTreeId: '5',\n        pduStatus: '总数',\n        pduInfoList: [],\n        pduAllList: []\n      }\n    },\n    methods: {\n      ok1() {\n        let json = {\n          equId: this.currentId,\n          port: this.formItem.port,\n          mark: '1'\n        }\n        this.$api.getPduSwitch(json).then(res => {\n          console.log(res)\n          this.$Message.info(res.data.msg)\n        })\n        this.modal1 = false\n      },\n      ok2() {\n        this.modal2 = false\n      },\n      selectThisSet(item) {\n        console.log('item', item)\n        this.currentId = item.equId\n        this.modal1 = true\n      },\n      showTotal() {\n        this.pduInfoList = []\n        let json = {\n          type: this.currentTreeType,\n          id: this.currentTreeId,\n          select: '总数'\n        }\n        this.$api.getPduList(json).then(res => {\n          res.data.data.forEach(item => {\n            // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n            if (item.pduUpdateInfoCur) {\n              item.pduBaseInfo.i = item.pduUpdateInfoCur.i\n              item.pduBaseInfo.u = item.pduUpdateInfoCur.u\n              item.pduBaseInfo.p = item.pduUpdateInfoCur.p\n              item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId\n            }\n            this.pduInfoList.push(item.pduBaseInfo)\n          })\n        })\n      },\n      showOnline() {\n        this.pduInfoList = []\n        let json = {\n          type: this.currentTreeType,\n          id: this.currentTreeId,\n          select: '在线数'\n        }\n        this.$api.getPduList(json).then(res => {\n          res.data.data.forEach(item => {\n            // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n            if (item.pduUpdateInfoCur) {\n              item.pduBaseInfo.i = item.pduUpdateInfoCur.i\n              item.pduBaseInfo.u = item.pduUpdateInfoCur.u\n              item.pduBaseInfo.p = item.pduUpdateInfoCur.p\n              item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId\n            }\n            this.pduInfoList.push(item.pduBaseInfo)\n          })\n        })\n      },\n      showOffline() {\n        this.pduInfoList = []\n        let json = {\n          type: this.currentTreeType,\n          id: this.currentTreeId,\n          select: '离线数'\n        }\n        this.$api.getPduList(json).then(res => {\n          res.data.data.forEach(item => {\n            // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n            if (item.pduUpdateInfoCur) {\n              item.pduBaseInfo.i = item.pduUpdateInfoCur.i\n              item.pduBaseInfo.u = item.pduUpdateInfoCur.u\n              item.pduBaseInfo.p = item.pduUpdateInfoCur.p\n              item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId\n            }\n            this.pduInfoList.push(item.pduBaseInfo)\n          })\n        })\n      },\n      getpduStatus() {\n        let json = {\n          type: this.currentType,\n          id: this.currentTreeId\n        }\n        this.$api.getPduStatus(json).then(res => {\n          console.log('status',res)\n          this.total = res.data.data.all\n          this.offline = res.data.data.offline\n          this.online = res.data.data.online\n        })\n      },\n      transformTime(data) {\n        return moment(data).format('YYYY-MM-DD HH:MM:SS')\n      },\n      showdianliu() {\n        var myChart = this.$echarts.init(document.getElementById(\"dianliu\"));\n        myChart.setOption({\n          title: {\n            text: \"72h电流展示图(A)\",\n            x: 'center',\n            y: 'top'\n          },\n          //图例-每一条数据的名字\n          // legend:{\n          //   data:['安培']\n          // },\n          tooltip : {\n            show: true,\n            trigger: 'axis'\n          },\n          //x轴\n          xAxis:{\n            type : 'category',\n            boundaryGap: false,\n            data:[\"9h\",\"18h\",\"27h\",\"36h\",\"45h\",\"54h\",\"63h\",\"72h\"]\n          },\n          //y轴没有显式设置，根据值自动生成y轴\n          yAxis:{\n            type: 'value'\n          },\n          //数据-data是最终要显示的数据\n          series:[{\n            name:'电流',\n            type:'line',\n            data: this.current\n            // data:[5,6,7,8,5,6,9,8]\n          }]\n        })\n      },\n      showdianya() {\n        var myChart = this.$echarts.init(document.getElementById(\"dianya\"));\n        myChart.setOption({\n          title: {\n            text: \"72h电压展示图(V)\",\n            x: 'center',\n            y: 'top'\n          },\n          //图例-每一条数据的名字\n          // legend:{\n          //   data:['安培']\n          // },\n          tooltip : {\n            show: true,\n            trigger: 'axis'\n          },\n          //x轴\n          xAxis:{\n            type : 'category',\n            boundaryGap: false,\n            data:[\"9h\",\"18h\",\"27h\",\"36h\",\"45h\",\"54h\",\"63h\",\"72h\"]\n          },\n          //y轴没有显式设置，根据值自动生成y轴\n          yAxis:{\n            type: 'value'\n          },\n          //数据-data是最终要显示的数据\n          series:[{\n            name:'电压',\n            type:'line',\n            data: this.voltage\n            // data:[5.565,6,7,8,5,6,9,8]\n          }]\n        })\n      },\n      // async await\n      async getdata() {\n        let json = {\n          equId: this.getId\n        }\n        await this.$api.getdianliu(json).then(res => {\n          // console.log('dianliu',res)\n          this.current = res.data.data.yvalue\n          // console.log('current',this.current)\n        })\n        await this.$api.getdianya(json).then(res => {\n          // console.log('dainya',res)\n          this.voltage = res.data.data.yvalue\n          // console.log('voltage', this.voltage)\n        })\n        this.judge = true\n        this.showdianliu()\n        this.showdianya()\n      },\n      // getdianliu() {\n      //   let json = {\n      //     equId: this.getId\n      //   }\n      //   this.$api.getdianliu(json).then(res => {\n      //     console.log('dianliu',res)\n      //     this.current = res.data.data.yvalue\n      //     console.log('current',this.current)\n      //   })\n      // },\n      // getdianya() {\n      //   let json = {\n      //     equId: this.getId\n      //   }\n      //   this.$api.getdianya(json).then(res => {\n      //     console.log('dainya',res)\n      //     this.voltage = res.data.data.yvalue\n      //     console.log('voltage', this.voltage)\n      //   })\n      // },\n      openDetail(data) {\n        console.log('data', data)\n        this.modal2 = true\n        this.getId = data.equId\n        this.pduname = data.name\n        this.ip = data.ip\n        this.latetime = data.lastUpdateTime\n\n        // this.getdianliu()\n        // this.getdianya()\n        this.getdata()\n        // this.showdianliu()\n        // this.showdianya()\n\n        // 获取详情接口，可从data中获取数据，接口暂时不用\n        // let json = {\n        //   equId: data.equId\n        // }\n        // this.$api.getPduDetail(json).then(res => {\n        //   console.log('detail',res)\n        // })\n      },\n      getTree() {\n        // let json = {\n        //   type: this.currentTreeType,\n        //   // id: ''\n        //   id: this.currentTreeId\n        // }\n        // this.$api.getPduTree(json).then(res => {\n        //   res.data.forEach(item => {\n        //     item.title = item.name\n        //   })\n        //   this.treeDataShow = res.data\n        // })\n        this.treeDataShow = [\n          {\n            id: 5,\n            isParent: true,\n            name: '磬苑校区',\n            nodekey: 0,\n            pid: \"school_0\",\n            title: \"磬苑校区\",\n            type: \"campus\",\n            expand: true,\n            children: [\n              {\n                id: 3,\n                isParent: true,\n                name: '博学南楼',\n                nodekey: 0,\n                pid: \"campus_5\",\n                title: \"博学南楼\",\n                type: \"group\"\n              },\n              {\n                id: 4,\n                isParent: true,\n                name: '博学北楼',\n                nodekey: 1,\n                pid: \"campus_5\",\n                title: \"博学北楼\",\n                type: \"group\"\n              },\n              {\n                id: 5,\n                isParent: true,\n                name: '笃行南楼',\n                nodekey: 2,\n                pid: \"campus_5\",\n                title: \"笃行南楼\",\n                type: \"group\"\n              },\n              {\n                id: 6,\n                isParent: true,\n                name: '笃行北楼',\n                nodekey: 3,\n                pid: \"campus_5\",\n                title: \"笃行北楼\",\n                type: \"group\"\n              },\n            ]\n          },\n        ]\n      },\n      selectNode(data, item) {\n        this.pduAllList = []\n        this.currentTreeType = item.type\n        this.currentType = item.type\n        this.currentTreeId = item.id\n        // if (this.currentTreeType === 'build') {\n        //   return\n        // }\n        // let json = {\n        //   type: this.currentTreeType,\n        //   id: this.currentTreeId\n        // }\n        // this.$api.getPduTree(json).then(res => {\n        //   res.data.forEach(item => {\n        //     if (!item.title) {\n        //       item.title = item.name\n        //     }\n        //   })\n        //   this.$set(item, 'children', res.data)\n        // })\n        // console.log('type', this.currentTreeType)\n        // console.log('id', this.currentTreeId)\n        this.getpduStatus()\n        let json = {\n          type: this.currentTreeType,\n          id: this.currentTreeId,\n          select: this.pduStatus\n        }\n        this.$api.getPduList(json).then(res => {\n          res.data.data.forEach(item => {\n            // this.pduAllList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n            if(item.pduUpdateInfoCur) {\n              item.pduBaseInfo.i = item.pduUpdateInfoCur.i\n              item.pduBaseInfo.u = item.pduUpdateInfoCur.u\n              item.pduBaseInfo.p = item.pduUpdateInfoCur.p\n              item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId\n            }\n            this.pduAllList.push(item.pduBaseInfo)\n          })\n          console.log('this.pduAllList', this.pduAllList)\n        })\n        this.pduInfoList = this.pduAllList\n      },\n      nodeContext(data) {\n        console.log(data)\n      },\n      getPduList() {\n        this.loading = true\n        let json = {\n          type: this.currentTreeType,\n          id: this.currentTreeId,\n          select: this.pduStatus\n        }\n        this.$api.getPduList(json).then(res => {\n          console.log('rrreeeessssss', res)\n          this.loading = false\n          res.data.data.forEach(item => {\n            // this.pduInfoList.push({...item.pduBaseInfo, ...item.pduUpdateInfoCur})\n            if(item.pduUpdateInfoCur) {\n              item.pduBaseInfo.i = item.pduUpdateInfoCur.i\n              item.pduBaseInfo.u = item.pduUpdateInfoCur.u\n              item.pduBaseInfo.p = item.pduUpdateInfoCur.p\n              item.pduBaseInfo.equId = item.pduUpdateInfoCur.equId\n            }\n            this.pduInfoList.push(item.pduBaseInfo)\n          })\n          console.log('this.pduInfoList', this.pduInfoList)\n        })\n\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n  .tree-container {\n    overflow: auto;\n    height: calc(100vh - 100px);\n    border: 1px solid #e8eaec;\n    border-radius: 5px;\n    padding: 10px;\n\n    /*&::-webkit-scrollbar {*/\n    /*  width: 3px;*/\n    /*}*/\n\n    /*&::-webkit-scrollbar-thumb {*/\n    /*  background: #d8d8d8;*/\n    /*  border-radius: 10px;*/\n    /*}*/\n\n    /*&::-webkit-scrollbar-track-piece {*/\n    /*  background: transparent;*/\n    /*}*/\n  }\n\n  .content {\n    display: flex;\n    padding: 10px 10px 10px 20px;\n    flex-wrap: wrap;\n    height: calc(100vh - 100px);\n    overflow: auto;\n  }\n\n  .content-item {\n    flex: 0 0 300px;\n    height: 175px;\n    margin-left: 50px;\n    margin-top: 20px;\n  }\n\n  .card-container {\n    display: flex;\n  }\n\n  .title-con {\n    justify-content: space-between;\n    display: flex;\n    line-height: 22px;\n  }\n\n  .card-left {\n    flex: 1;\n    text-align: center;\n    line-height: 66px;\n    display: flex;\n  }\n\n  .card-mid {\n    flex: 1;\n    text-align: center;\n    line-height: 66px;\n  }\n\n  .card-right {\n    flex: 1;\n    text-align: center;\n    line-height: 66px;\n\n  }\n\n  .room-light {\n    font-size: 25px;\n    margin-right: 5px;\n  }\n\n  .set-active {\n    color: #409EFF;\n  }\n\n  @font-face {\n    font-family: \"iconfont\";\n    src: url('//at.alicdn.com/t/font_1856307_k3n6r8aao3f.eot?t=1591014838214'); /* IE9 */\n    src: url('//at.alicdn.com/t/font_1856307_k3n6r8aao3f.eot?t=1591014838214#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAXUAAsAAAAACuwAAAWHAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDHAqJKIdNATYCJAMQCwoABCAFhG0HSBs/CRFVpJmR/Shwd3K+lRvnzcu6X49LsRxk8HTaz1uk27dF4lK84mBtjgyKIxDch5mt6VhDVpgI1SVrWX76/zbf7vylKeM8TqMUCg0WRQIEEPz/+82KWITTxW6j0YvJ+x/VJqaREEmweV1IZhbK8lbqcpuB7ArWbeUXjwcCgMIPMSAlZTUtEMDBWY0AIONGjxwMoWQF18MiEAyylm05P7IBPARmJfMEwPr498k3SCICwIBn4azbMKJ0GAo+9/08m5UcEvqFBCincwOQdgJYADEAOICMavUOAZvqYmJE27I5pAEQXDcDTDXL//NshyNVHQUJvA9gqP95RAYHubDUFD17xpS+GBjgc39FG5bNqq4A4sJtBABagKwHyIdwcJ94MREsBF9K2UCOvQei9lTK5S4u/v5+TTMtlhbJ2grpaCikg6K4+rA32X/cP4zd3maz9aOrTISIkAxtdN+h9IJdBzr7iK1qUGLWtZkPhdE9BzStRg0o0dpsfQgOYLW2WiwTRNC2PtGtrm2RLa2mbgS/MJnI77KV3bEEcBcsAGSYW29rJ3i47fZoM9ETfvv11VfBGTUXrb4WSx9Wf2jVATB7jmDry9Vv/55jc+V0z8XstJYq7tuD2V22DulKiHzfNS+293q4Yu9VtMhXGSSjqFht1ptylkZh/vMm9VzSmvaoiaFbQ1bv1XTHWKyhRqPZbNIS06nk20O7mNR0i91n2yW6jPmgZ3eCxaoxribc+Fabfai5V6s17VNTAzKI7gDuQ1q6YR2WdaOqZ0pzV/fQg+gyM0xqQ5cGxr060exdDYPhNJtWH2artCRT0hj39w77bgZ1VrbRqGNOT2V6epipjY368uCZnvs7PLXvaSO0T3nPDrMwsyy4UY8GdmpPz6DvIvgZMmWRUjZCLK2RL1fG744nMzM8I6qbkvftycqbkhSaMXI8xRTQ8RmjQoon52WdKfStmoJyZuiSJUOJKw3XJUNRXj1lyk8jI0Y++7Si4rKHnrDmEVdq7nmnIthKzPuT58vLGgv9dXi+f2RLImmbNrUP08awLtKWWD7HnqBC0t5GipyCi3/b7woocanwUqDSxcyL9+lEitrbNN9tcrrCVqg2jT3s5VTa0Ork3It8VhojVVc7ZXtUVenH6KurhFQaLCh/7J2yYcmGENpAQ+J5UrzH7c2i76nfo2Hkqfqp8yDxa9/VvLsh2vBE8+RR6rPZBYs9MhA5aTFI/4m9q0OrQvu93/Thw/wBw6D//XF8fML7ows2e0Qgc9JmkNqJvXN7CUWE+nXJZNk78ccUL64MF+kyETGYmXfSoGM74oaUDNjQ5H5R+Lih2JTjXxBa8i+zd0Qn6Zy+l3ypfCsNXypccYO4BLoQum1xZh3enO3utu2bKh/699+/P/b16WTGQId6C7UZi7dRV4WXwlX5Z9rb8q/2XQDGj0NurH6chkkAAEcv+5IdDjiWMc/Y+YBD4may0kt9OSyTLUoY6J7zmyA+1UNv/6M9F6swDK9XJax8YbdxMwCH45my2rFxnK70sRl4Azigz4nwamkDRQEONqj0nQLXGMUAIdDkwHDiCyxBCJGjxgBPlAIygnygou12FqmwIbIzgCgPBgi5JzDcXAeW3IvIUT/A0/qDjLwhUH1y9ikKK1+sGJVgAvoOeUyN8RyySEr3mHaV4qI65p2R2zwEgetXUztskKfYoL2koYgBw1TDljkZVhWBZSowFjcTsZHnmbYncmOqewvFGFIESgDtDuRipGHCwWJR+/k9lOpUFO7paUieIdbK5w4CLh8g7lAD9dxKdesiFRIuagAjFZMa2HJuVLlxAmz7UgUUE66MImpFPK6fQZG7PF7fwhMAKGchLoawhCM8+P+f3EyWgrU97Zt0jLOSmlRyRb0eAA==') format('woff2'),\n    url('//at.alicdn.com/t/font_1856307_k3n6r8aao3f.woff?t=1591014838214') format('woff'),\n    url('//at.alicdn.com/t/font_1856307_k3n6r8aao3f.ttf?t=1591014838214') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url('//at.alicdn.com/t/font_1856307_k3n6r8aao3f.svg?t=1591014838214#iconfont') format('svg'); /* iOS 4.1- */\n  }\n\n  .iconfont {\n    font-family: \"iconfont\" !important;\n    font-size: 25px;\n    font-style: normal;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .icon-light:before {\n    content: \"\\e63b\";\n  }\n\n  .icon-temperature:before {\n    content: \"\\e61d\";\n  }\n\n  .icon-kongtiao:before {\n    content: \"\\e61f\";\n    font-size: 18px;\n  }\n\n  .card-bottom {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .time-selected {\n    color: #409EFF;\n  }\n\n\n</style>\n"],"sourceRoot":"src/components/User"}]}